generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model category {
  id          Int        @id @default(autoincrement())
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  name        String?    @db.VarChar(255)
  description String?    @db.VarChar(255)
  products    products[]
}

model products {
  id          Int       @id @default(autoincrement())
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  name        String?   @db.VarChar(255)
  price       Decimal?  @db.Decimal
  categoryId  Int?
  category    category? @relation(fields: [categoryId], references: [id])
  stock       Int?
  description String?   @db.VarChar(255)
  slug        String?   @db.VarChar(255)
  images      ProductImage[]

  usersProducts usersProducts[]
}

model user {
  id             Int      @id @default(autoincrement())
  created_at     DateTime @default(now()) @db.Timestamp(6)
  firstName      String   @db.VarChar(255)
  lastName       String   @db.VarChar(255)
  email          String   @unique @db.VarChar(255)
  password       String   @db.VarChar(255)
  roleId         Int      @default(2)
  otpCode        String?  @db.VarChar(6)
  otpExpiry      DateTime? @db.Timestamp(6)
  profilePicture String?  @db.VarChar(255)
  roles          roles    @relation(fields: [roleId], references: [id])
  usersProducts  usersProducts[]
}

model roles {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)

  user user[]
}

model usersProducts {
  id        Int      @id @default(autoincrement())
  userId    Int
  productId Int
  user      user     @relation(fields: [userId], references: [id])
  product   products @relation(fields: [productId], references: [id])
}

model ProductImage {
  id        Int      @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamp(6)
  url       String   @db.VarChar(255)
  productId Int
  product   products @relation(fields: [productId], references: [id])
}
